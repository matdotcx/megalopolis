apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchard-controller
  namespace: orchard-system
  labels:
    app: orchard-controller
    app.kubernetes.io/name: orchard
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: megalopolis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orchard-controller
  template:
    metadata:
      labels:
        app: orchard-controller
        app.kubernetes.io/name: orchard
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: orchard-controller
      containers:
      - name: orchard
        image: ghcr.io/cirruslabs/orchard:latest
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: ORCHARD_LOG_LEVEL
          value: "info"
        - name: ORCHARD_METRICS_ENABLED
          value: "true"
        - name: ORCHARD_AUTH_ENABLED
          value: "false"  # Disabled for local development
        - name: ORCHARD_CORS_ENABLED
          value: "true"
        - name: ORCHARD_DATA_PATH
          value: "/var/lib/orchard"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: orchard-data
          mountPath: /var/lib/orchard
        - name: docker-sock
          mountPath: /var/run/docker.sock
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: orchard-data
        persistentVolumeClaim:
          claimName: orchard-data
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      # Host network access for VM management
      hostNetwork: false
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000