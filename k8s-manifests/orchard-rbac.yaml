apiVersion: v1
kind: ServiceAccount
metadata:
  name: orchard-controller
  namespace: orchard-system
  labels:
    app: orchard-controller
    app.kubernetes.io/name: orchard
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: megalopolis

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: orchard-controller
  labels:
    app: orchard-controller
    app.kubernetes.io/name: orchard
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: megalopolis
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
# Custom Resource Definitions for VM management
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# VM-specific resources (if Orchard uses CRDs)
- apiGroups: ["orchard.io"]
  resources: ["*"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: orchard-controller
  labels:
    app: orchard-controller
    app.kubernetes.io/name: orchard
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: megalopolis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: orchard-controller
subjects:
- kind: ServiceAccount
  name: orchard-controller
  namespace: orchard-system