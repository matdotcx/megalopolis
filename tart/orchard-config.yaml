# Orchard Controller Configuration
# This configures the Orchard controller that will run in the Kind cluster

orchard:
  # Controller settings
  controller:
    # Docker image for Orchard controller
    image: "ghcr.io/cirruslabs/orchard:latest"
    
    # Resource requests and limits
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    
    # Number of replicas
    replicas: 1
    
    # Service configuration
    service:
      type: "ClusterIP"
      port: 8080
      target_port: 8080
    
    # API configuration
    api:
      # Authentication (disabled for local development)
      auth_enabled: false
      
      # CORS settings for web access
      cors_enabled: true
      cors_origins:
        - "http://localhost:*"
        - "http://127.0.0.1:*"
  
  # VM management settings
  vm_management:
    # Default VM lifecycle settings
    default_timeout: "600s"  # 10 minutes
    
    # VM state check interval
    health_check_interval: "30s"
    
    # Maximum number of concurrent VM operations
    max_concurrent_operations: 5
    
    # VM naming convention
    vm_name_prefix: "orchard-"
    
    # Auto-cleanup settings
    auto_cleanup:
      enabled: true
      # Remove VMs that have been stopped for more than this duration
      cleanup_after: "24h"
  
  # Storage configuration
  storage:
    # Where to store VM images and data
    # This will be mounted from the host
    data_path: "/var/lib/orchard"
    
    # Persistent volume settings
    persistent_volume:
      enabled: true
      size: "100Gi"
      storage_class: "standard"  # Use Kind's default storage class
  
  # Networking
  networking:
    # Host network access for VM management
    host_network: false
    
    # Service mesh integration (disabled for simplicity)
    service_mesh_enabled: false
  
  # Monitoring and logging
  monitoring:
    # Enable metrics collection
    metrics_enabled: true
    metrics_port: 9090
    
    # Log level
    log_level: "info"
    
    # Health check endpoint
    health_check_path: "/health"